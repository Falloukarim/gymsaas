'use client';

import {ROLE_PERMISSIONS, ROLE_HIERARCHY, UserRoleValue  } from '@/lib/constants/role';
import { redirect } from 'next/navigation';
import { useUser } from '@/hooks/useUser'; // üî• √Ä cr√©er si ce n'est pas d√©j√† fait

interface RoleGuardProps {
  children: React.ReactNode;
  requiredRole?: UserRoleValue;
  requiredPermission?: keyof typeof ROLE_PERMISSIONS[UserRoleValue];
}

export function RoleGuard({ children, requiredRole, requiredPermission }: RoleGuardProps) {
  const { role } = useUser(); // üî• Hook personnalis√© qui retourne { role: UserRoleValue }

  // V√©rifier la hi√©rarchie des r√¥les si requiredRole est sp√©cifi√©
  if (requiredRole && ROLE_HIERARCHY[role] < ROLE_HIERARCHY[requiredRole]) {
    redirect('/unauthorized');
  }

  // V√©rifier les permissions si requiredPermission est sp√©cifi√©
  if (requiredPermission && !ROLE_PERMISSIONS[role][requiredPermission]) {
    redirect('/unauthorized');
  }

  return <>{children}</>;
}
